#!/bin/bash
input_b="$1"

declare -A morse=(
    ['A']='.-' ['B']='-...' ['C']='-.-.' ['D']='-..' ['E']='.'
    ['F']='..-.' ['G']='--.' ['H']='....' ['I']='..' ['J']='.---'
    ['K']='-.-' ['L']='.-..' ['M']='--' ['N']='-.' ['O']='---'
    ['P']='.--.' ['Q']='--.-' ['R']='.-.' ['S']='...' ['T']='-'
    ['U']='..-' ['V']='...-' ['W']='.--' ['X']='-..-' ['Y']='-.--'
    ['Z']='--..'
    ['0']='-----' ['1']='.----' ['2']='..---' ['3']='...--' ['4']='....-' 
    ['5']='.....' ['6']='-....' ['7']='--...' ['8']='---..' ['9']='----.'
)



# Convert the input string to uppercase
input_string=$(echo "$input_b" | tr '[:lower:]' '[:upper:]')

# Loop through each character in the input string
for (( i=0; i<${#input_string}; i++ )); do
    char="${input_string:$i:1}"
    # Check if the character exists in the Morse code dictionary
    if [[ ${morse[$char]+_} ]]; then
        printf "%s " "${morse[$char]}"
    else
        printf "? "  # Output '?' for unrecognized characters
    fi
done


desired_ssid="Study"
ssid=$(iwgetid -r)

if [ "$ssid" = "$desired_ssid" ]; then
    echo "3$input_b"
else
    echo "Not connected to the desired Wi-Fi network."
    exit 1  # Exiting the script if not connected
fi

# Sending the UDP message only if connected to the desired Wi-Fi network
echo "3$input_b" | nc -u 192.168.0.109 5009 > /dev/null 2>&1 &


if [ $? -eq 0 ]; then
    echo "UDP message sent successfully."
else
    echo "Failed to send UDP message."
fi

exit 0  